apiVersion: v1
kind: Namespace
metadata:
  name: portfolio
  labels:
    name: portfolio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio
  namespace: portfolio
spec:
  selector:
    matchLabels:
      app: portfolio
  template:
    metadata:
      labels:
        app: portfolio
    spec:
      containers:
      - name: portfolio
        image: iuriikogan/portfolio:lastest
        imagePullPolicy: Always
        securityContext:
          runAsUser: 65534
          runAsGroup: 65534
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
              - all
            add:
              - NET_ADMIN
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "1280Mi"
            cpu: "1000m"
        volumeMounts: 
        - name: cache
          mountPath: /var/cache/nginx
        - name: tmp
          mountPath: /tmp/nginx
        - name: conf 
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        ports:
        - containerPort: 80
        livenessProbe: 
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      volumes: 
      - name: cache
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: conf
        configMap:
          name: nginx-conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: portfolio
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        include       /etc/nginx/mime.types;
        access_log  /var/log/nginx/access.log  main;
        server {
            listen       8080;
            server_name  localhost;
            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }
            location = /50x.html {
                root   /usr/share/nginx/html;
            }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: portfolio-service
  namespace: portfolio
spec:
  selector:
    app: portfolio
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: portfolio-ingress
  namespace: portfolio 
spec:
  ingressClassName: nginx
  rules:
  - host: portfolio.localhost
    http:
        paths:
        - pathType: Prefix
          path: "/"
          backend:
            service:
              name: portfolio-service
              port:
                number: 80
